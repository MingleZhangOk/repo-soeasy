{"__symbolic":"module","version":4,"metadata":{"JhiItemCountComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"jhi-item-count","template":"\n        <div *ngIf=\"i18nEnabled; else noI18n\" class=\"info jhi-item-count\" jhiTranslate=\"global.item-count\" [translateValues]=\"i18nValues()\">\n            /* [attr.translateValues] is used to get entire values in tests */\n        </div>\n        <ng-template #noI18n class=\"info jhi-item-count\">\n            Showing\n            {{ (page - 1) * itemsPerPage == 0 ? 1 : (page - 1) * itemsPerPage + 1 }}\n            - {{ page * itemsPerPage < total ? page * itemsPerPage : total }} of {{ total }} items.\n        </ng-template>\n    "}]}],"members":{"page":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"total":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":5}}]}],"itemsPerPage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"JhiConfigService"}]}],"i18nValues":[{"__symbolic":"method"}]}},"JhiBooleanComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":80,"character":1},"arguments":[{"selector":"jhi-boolean","template":"\n        <span [ngClass]=\"value ? classTrue : classFalse\" [innerHtml]=\"value ? textTrue : textFalse\"> </span>\n    "}]}],"members":{"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":90,"character":5}}]}],"classTrue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":95,"character":5}}]}],"classFalse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":100,"character":5}}]}],"textTrue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":105,"character":5}}]}],"textFalse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":110,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"JhiConfigService"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"JhiModuleConfig":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":21,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{},"statics":{"ngInjectableDef":{}}},"JhiConfigService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":21,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"JhiModuleConfig"}]}],"getConfig":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiMaxbytesValidatorDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":23,"character":1},"arguments":[{"selector":"[jhiMaxbytes][ngModel]","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS","line":25,"character":27},"useExisting":{"__symbolic":"reference","name":"JhiMaxbytesValidatorDirective"},"multi":true}]}]}],"members":{"jhiMaxbytes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"validate":[{"__symbolic":"method"}]}},"JhiMinbytesValidatorDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":23,"character":1},"arguments":[{"selector":"[jhiMinbytes][ngModel]","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS","line":25,"character":27},"useExisting":{"__symbolic":"reference","name":"JhiMinbytesValidatorDirective"},"multi":true}]}]}],"members":{"jhiMinbytes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"validate":[{"__symbolic":"method"}]}},"JhiMaxValidatorDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":21,"character":1},"arguments":[{"selector":"[jhiMax][ngModel]","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS","line":23,"character":27},"useExisting":{"__symbolic":"reference","name":"JhiMaxValidatorDirective"},"multi":true}]}]}],"members":{"jhiMax":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"validate":[{"__symbolic":"method"}]}},"JhiMinValidatorDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":21,"character":1},"arguments":[{"selector":"[jhiMin][ngModel]","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS","line":23,"character":27},"useExisting":{"__symbolic":"reference","name":"JhiMinValidatorDirective"},"multi":true}]}]}],"members":{"jhiMin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"validate":[{"__symbolic":"method"}]}},"JhiSortDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":21,"character":1},"arguments":[{"selector":"[jhiSort]"}]}],"members":{"predicate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":5}}]}],"ascending":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":5}}]}],"callback":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":5}}]}],"predicateChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":29,"character":5}}]}],"ascendingChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"sort":[{"__symbolic":"method"}]}},"JhiSortByDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":25,"character":1},"arguments":[{"selector":"[jhiSortBy]"}]}],"members":{"jhiSortBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":5}}]}],"iconComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":30,"character":5},"arguments":[{"__symbolic":"reference","module":"@fortawesome/angular-fontawesome","name":"FaIconComponent","line":30,"character":18}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":36,"character":17}}],null],"parameters":[{"__symbolic":"reference","name":"JhiSortDirective"},{"__symbolic":"reference","name":"JhiConfigService"}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":51,"character":5},"arguments":["click"]}]}],"updateIconDefinition":[{"__symbolic":"method"}]}},"JhiLanguageService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":23,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":29,"character":42},{"__symbolic":"reference","name":"JhiConfigService"}]}],"init":[{"__symbolic":"method"}],"changeLanguage":[{"__symbolic":"method"}],"getCurrent":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiTranslateDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":26,"character":1},"arguments":[{"selector":"[jhiTranslate]"}]}],"members":{"jhiTranslate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":5}}]}],"translateValues":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"JhiConfigService"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":33,"character":69},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":33,"character":107}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getTranslation":[{"__symbolic":"method"}]}},"JhiMissingTranslationHandler":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"JhiConfigService"}]}],"handle":[{"__symbolic":"method"}]}},"missingTranslationHandler":{"__symbolic":"function","parameters":["configService"],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","name":"JhiMissingTranslationHandler"},"arguments":[{"__symbolic":"reference","name":"configService"}]}},"NgJhipsterModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":44,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":46,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":47,"character":8},"member":"forRoot"},"arguments":[{"loader":{"provide":{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateLoader","line":49,"character":25},"useFactory":{"__symbolic":"reference","name":"translatePartialLoader"},"deps":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":51,"character":23}]},"missingTranslationHandler":{"provide":{"__symbolic":"reference","module":"@ngx-translate/core","name":"MissingTranslationHandler","line":54,"character":25},"useFactory":{"__symbolic":"reference","name":"missingTranslationHandler"},"deps":[{"__symbolic":"reference","name":"JhiConfigService"}]}}]},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":59,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModule","line":60,"character":8},"member":"forRoot"}},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":61,"character":8}],"declarations":[{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"ɵa"}},{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"ɵb"}},{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"ɵc"}},{"__symbolic":"reference","name":"JhiTranslateDirective"}],"entryComponents":[{"__symbolic":"reference","name":"ɵl"}],"exports":[{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"ɵa"}},{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"ɵb"}},{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"ɵc"}},{"__symbolic":"reference","name":"JhiTranslateDirective"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":65,"character":89},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":65,"character":106}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":["moduleConfig"],"value":{"ngModule":{"__symbolic":"reference","name":"NgJhipsterModule"},"providers":[{"provide":{"__symbolic":"reference","name":"JhiLanguageService"},"useClass":{"__symbolic":"reference","name":"JhiLanguageService"},"deps":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":75,"character":27},{"__symbolic":"reference","name":"JhiConfigService"}]},{"provide":{"__symbolic":"reference","name":"JhiResolvePagingParams"},"useClass":{"__symbolic":"reference","name":"JhiResolvePagingParams"},"deps":[{"__symbolic":"reference","name":"JhiPaginationUtil"}]},{"provide":{"__symbolic":"reference","name":"JhiAlertService"},"useClass":{"__symbolic":"reference","name":"JhiAlertService"},"deps":[{"__symbolic":"reference","module":"@angular/core","name":"Sanitizer","line":85,"character":27},{"__symbolic":"reference","name":"JhiConfigService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":85,"character":56}]},{"provide":{"__symbolic":"reference","name":"JhiModuleConfig"},"useValue":{"__symbolic":"reference","name":"moduleConfig"}},{"provide":{"__symbolic":"reference","name":"JhiConfigService"},"useClass":{"__symbolic":"reference","name":"JhiConfigService"},"deps":[{"__symbolic":"reference","name":"JhiModuleConfig"}]}]}},"forChild":{"__symbolic":"function","parameters":["moduleConfig"],"value":{"ngModule":{"__symbolic":"reference","name":"NgJhipsterModule"},"providers":[{"provide":{"__symbolic":"reference","name":"JhiModuleConfig"},"useValue":{"__symbolic":"reference","name":"moduleConfig"}}]}}}},"translatePartialLoader":{"__symbolic":"function","parameters":["http"],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@ngx-translate/http-loader","name":"TranslateHttpLoader","line":37,"character":15},"arguments":[{"__symbolic":"reference","name":"http"},"i18n/",{"__symbolic":"binop","operator":"+","left":".json?buildTimestamp=","right":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"process"},"member":"env"},"member":"BUILD_TIMESTAMP"}}]}},"JhiTruncateCharactersPipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":20,"character":1},"arguments":[{"name":"truncateCharacters"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"JhiTruncateWordsPipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":20,"character":1},"arguments":[{"name":"truncateWords"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"JhiOrderByPipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":20,"character":1},"arguments":[{"name":"orderBy"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"JhiFilterPipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":20,"character":1},"arguments":[{"name":"filter","pure":false}]}],"members":{"transform":[{"__symbolic":"method"}],"filterByStringAndField":[{"__symbolic":"method"}],"filterByString":[{"__symbolic":"method"}],"filterDefault":[{"__symbolic":"method"}],"filterByObject":[{"__symbolic":"method"}]}},"JhiPureFilterPipe":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"JhiFilterPipe"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":21,"character":1},"arguments":[{"name":"pureFilter"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"JhiCapitalizePipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":20,"character":1},"arguments":[{"name":"capitalize"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"JhiKeysPipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":20,"character":1},"arguments":[{"name":"keys"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"JhiPaginationUtil":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":23,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"parseAscending":[{"__symbolic":"method"}],"parsePage":[{"__symbolic":"method"}],"parsePredicate":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiParseLinks":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":23,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"parse":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiDataUtils":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":23,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"abbreviate":[{"__symbolic":"method"}],"byteSize":[{"__symbolic":"method"}],"openFile":[{"__symbolic":"method"}],"toBase64":[{"__symbolic":"method"}],"clearInputImage":[{"__symbolic":"method"}],"setFileData":[{"__symbolic":"method"}],"downloadFile":[{"__symbolic":"method"}],"endsWith":[{"__symbolic":"method"}],"paddingSize":[{"__symbolic":"method"}],"size":[{"__symbolic":"method"}],"formatAsBytes":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiDateUtils":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"convertDateTimeFromServer":[{"__symbolic":"method"}],"convertLocalDateFromServer":[{"__symbolic":"method"}],"convertLocalDateToServer":[{"__symbolic":"method"}],"dateformat":[{"__symbolic":"method"}],"toDate":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiEventManager":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":25,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"broadcast":[{"__symbolic":"method"}],"subscribe":[{"__symbolic":"method"}],"destroy":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiAlertType":{"__symbolic":"interface"},"JhiAlert":{"__symbolic":"interface"},"JhiAlertService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":37,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Sanitizer","line":41,"character":35},{"__symbolic":"reference","name":"JhiConfigService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":41,"character":113}]}],"clear":[{"__symbolic":"method"}],"get":[{"__symbolic":"method"}],"success":[{"__symbolic":"method"}],"error":[{"__symbolic":"method"}],"warning":[{"__symbolic":"method"}],"info":[{"__symbolic":"method"}],"addAlert":[{"__symbolic":"method"}],"closeAlert":[{"__symbolic":"method"}],"closeAlertByIndex":[{"__symbolic":"method"}],"isToast":[{"__symbolic":"method"}],"factory":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiBase64Service":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":21,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"encode":[{"__symbolic":"method"}],"decode":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"JhiResolvePagingParams":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":22,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"JhiPaginationUtil"}]}],"resolve":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵa":[{"__symbolic":"reference","name":"JhiCapitalizePipe"},{"__symbolic":"reference","name":"JhiFilterPipe"},{"__symbolic":"reference","name":"JhiKeysPipe"},{"__symbolic":"reference","name":"JhiOrderByPipe"},{"__symbolic":"reference","name":"JhiPureFilterPipe"},{"__symbolic":"reference","name":"JhiTruncateCharactersPipe"},{"__symbolic":"reference","name":"JhiTruncateWordsPipe"}],"ɵb":[{"__symbolic":"reference","name":"JhiMaxValidatorDirective"},{"__symbolic":"reference","name":"JhiMinValidatorDirective"},{"__symbolic":"reference","name":"JhiMaxbytesValidatorDirective"},{"__symbolic":"reference","name":"JhiMinbytesValidatorDirective"},{"__symbolic":"reference","name":"JhiSortDirective"},{"__symbolic":"reference","name":"JhiSortByDirective"}],"ɵc":[{"__symbolic":"reference","name":"JhiItemCountComponent"},{"__symbolic":"reference","name":"JhiBooleanComponent"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"}],"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"jhi-jvm-memory","template":"\n        <h4 jhiTranslate=\"metrics.jvm.memory.title\">Memory</h4>\n        <div *ngIf=\"!updating\">\n            <div *ngFor=\"let entry of (jvmMemoryMetrics | keys)\">\n                <span *ngIf=\"entry.value.max != -1; else other\">\n                    <span>{{ entry.key }}</span> ({{ entry.value.used / 1048576 | number: '1.0-0' }}M /\n                    {{ entry.value.max / 1048576 | number: '1.0-0' }}M)\n                </span>\n                <div>Committed : {{ entry.value.committed / 1048576 | number: '1.0-0' }}M</div>\n                <ng-template #other\n                    ><span\n                        ><span>{{ entry.key }}</span> {{ entry.value.used / 1048576 | number: '1.0-0' }}M</span\n                    >\n                </ng-template>\n                <ngb-progressbar\n                    *ngIf=\"entry.value.max != -1\"\n                    type=\"success\"\n                    [value]=\"(100 * entry.value.used) / entry.value.max\"\n                    [striped]=\"true\"\n                    [animated]=\"false\"\n                >\n                    <span>{{ (entry.value.used * 100) / entry.value.max | number: '1.0-0' }}%</span>\n                </ngb-progressbar>\n            </div>\n        </div>\n    "}]}],"members":{"jvmMemoryMetrics":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":5}}]}],"updating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":5}}]}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"jhi-jvm-threads","template":"\n        <h4 jhiTranslate=\"metrics.jvm.threads.title\">Threads</h4>\n        <span><span jhiTranslate=\"metrics.jvm.threads.runnable\">Runnable</span> {{ threadStats.threadDumpRunnable }}</span>\n        <ngb-progressbar\n            [value]=\"threadStats.threadDumpRunnable\"\n            [max]=\"threadStats.threadDumpAll\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"success\"\n        >\n            <span>{{ (threadStats.threadDumpRunnable * 100) / threadStats.threadDumpAll | number: '1.0-0' }}%</span>\n        </ngb-progressbar>\n        <span><span jhiTranslate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{ threadStats.threadDumpTimedWaiting }})</span>\n        <ngb-progressbar\n            [value]=\"threadStats.threadDumpTimedWaiting\"\n            [max]=\"threadStats.threadDumpAll\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"warning\"\n        >\n            <span>{{ (threadStats.threadDumpTimedWaiting * 100) / threadStats.threadDumpAll | number: '1.0-0' }}%</span>\n        </ngb-progressbar>\n        <span><span jhiTranslate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{ threadStats.threadDumpWaiting }})</span>\n        <ngb-progressbar\n            [value]=\"threadStats.threadDumpWaiting\"\n            [max]=\"threadStats.threadDumpAll\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"warning\"\n        >\n            <span>{{ (threadStats.threadDumpWaiting * 100) / threadStats.threadDumpAll | number: '1.0-0' }}%</span>\n        </ngb-progressbar>\n        <span><span jhiTranslate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{ threadStats.threadDumpBlocked }})</span>\n        <ngb-progressbar\n            [value]=\"threadStats.threadDumpBlocked\"\n            [max]=\"threadStats.threadDumpAll\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"success\"\n        >\n            <span>{{ (threadStats.threadDumpBlocked * 100) / threadStats.threadDumpAll | number: '1.0-0' }}%</span>\n        </ngb-progressbar>\n        <div>Total: {{ threadStats.threadDumpAll }}</div>\n        <button class=\"hand btn btn-primary btn-sm\" (click)=\"open()\" data-toggle=\"modal\" data-target=\"#threadDump\">\n            <span>Expand</span>\n        </button>\n    "}]}],"members":{"threadData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":86,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModal","line":88,"character":38}]}],"ngOnInit":[{"__symbolic":"method"}],"open":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"jhi-metrics-request","template":"\n        <h3 jhiTranslate=\"metrics.jvm.http.title\">HTTP requests (time in millisecond)</h3>\n        <table class=\"table table-striped\" *ngIf=\"!updating\">\n            <thead>\n                <tr>\n                    <th jhiTranslate=\"metrics.jvm.http.table.code\">Code</th>\n                    <th jhiTranslate=\"metrics.jvm.http.table.count\">Count</th>\n                    <th class=\"text-right\" jhiTranslate=\"metrics.jvm.http.table.mean\">Mean</th>\n                    <th class=\"text-right\" jhiTranslate=\"metrics.jvm.http.table.max\">Max</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let entry of (requestMetrics['percode'] | keys)\">\n                    <td>{{ entry.key }}</td>\n                    <td>\n                        <ngb-progressbar\n                            [max]=\"requestMetrics['all'].count\"\n                            [value]=\"entry.value.count\"\n                            [striped]=\"true\"\n                            [animated]=\"false\"\n                            type=\"success\"\n                        >\n                            <span>{{ entry.value.count }}</span>\n                        </ngb-progressbar>\n                    </td>\n                    <td class=\"text-right\">\n                        {{ filterNaN(entry.value.mean) | number: '1.0-2' }}\n                    </td>\n                    <td class=\"text-right\">{{ entry.value.max | number: '1.0-2' }}</td>\n                </tr>\n            </tbody>\n        </table>\n    "}]}],"members":{"requestMetrics":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"updating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":5}}]}],"filterNaN":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"jhi-metrics-endpoints-requests","template":"\n        <h3>Endpoints requests (time in millisecond)</h3>\n        <div class=\"table-responsive\" *ngIf=\"!updating\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Method</th>\n                        <th>Endpoint url</th>\n                        <th class=\"text-right\">Count</th>\n                        <th class=\"text-right\">Mean</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <ng-container *ngFor=\"let entry of (endpointsRequestsMetrics | keys)\">\n                        <tr *ngFor=\"let method of (entry.value | keys)\">\n                            <td>{{ method.key }}</td>\n                            <td>{{ entry.key }}</td>\n                            <td class=\"text-right\">{{ method.value.count }}</td>\n                            <td class=\"text-right\">{{ method.value.mean | number: '1.0-3' }}</td>\n                        </tr>\n                    </ng-container>\n                </tbody>\n            </table>\n        </div>\n    "}]}],"members":{"endpointsRequestsMetrics":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":5}}]}],"updating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":5}}]}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"jhi-metrics-cache","template":"\n        <h3 jhiTranslate=\"metrics.cache.title\">Cache statistics</h3>\n        <div class=\"table-responsive\" *ngIf=\"!updating\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th jhiTranslate=\"metrics.cache.cachename\">Cache name</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.hits\">Cache Hits</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.misses\">Cache Misses</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.gets\">Cache Gets</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.puts\">Cache Puts</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.removals\">Cache Removals</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.evictions\">Cache Evictions</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.hitPercent\">Cache Hit %</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.missPercent\">Cache Miss %</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let entry of (cacheMetrics | keys)\">\n                        <td>{{ entry.key }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.hit'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.miss'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.puts'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.removals'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.evictions'] }}</td>\n                        <td class=\"text-right\">\n                            {{\n                                filterNaN(\n                                    (100 * entry.value['cache.gets.hit']) / (entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'])\n                                ) | number: '1.0-4'\n                            }}\n                        </td>\n                        <td class=\"text-right\">\n                            {{\n                                filterNaN(\n                                    (100 * entry.value['cache.gets.miss']) /\n                                        (entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'])\n                                ) | number: '1.0-4'\n                            }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    "}]}],"members":{"cacheMetrics":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":5}}]}],"updating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":78,"character":5}}]}],"filterNaN":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"jhi-metrics-datasource","template":"\n        <h3 jhiTranslate=\"metrics.datasource.title\">DataSource statistics (time in millisecond)</h3>\n        <div class=\"table-responsive\" *ngIf=\"!updating\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>\n                            <span jhiTranslate=\"metrics.datasource.usage\">Connection Pool Usage</span> (active:\n                            {{ datasourceMetrics.active.value }}, min: {{ datasourceMetrics.min.value }}, max:\n                            {{ datasourceMetrics.max.value }}, idle: {{ datasourceMetrics.idle.value }})\n                        </th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.datasource.count\">Count</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.datasource.mean\">Mean</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.min\">Min</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p50\">p50</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p75\">p75</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p95\">p95</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p99\">p99</th>\n                        <th class=\"text-right\" jhiTranslate=\"metrics.datasource.max\">Max</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Acquire</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire.count }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.acquire.mean) | number: '1.0-2' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.0'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.5'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.75'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.95'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.acquire['0.99'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.acquire.max) | number: '1.0-2' }}</td>\n                    </tr>\n                    <tr>\n                        <td>Creation</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation.count }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.creation.mean) | number: '1.0-2' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.0'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.5'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.75'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.95'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.creation['0.99'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.creation.max) | number: '1.0-2' }}</td>\n                    </tr>\n                    <tr>\n                        <td>Usage</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage.count }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.usage.mean) | number: '1.0-2' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.0'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.5'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.75'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.95'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ datasourceMetrics.usage['0.99'] | number: '1.0-3' }}</td>\n                        <td class=\"text-right\">{{ filterNaN(datasourceMetrics.usage.max) | number: '1.0-2' }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    "}]}],"members":{"datasourceMetrics":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":86,"character":5}}]}],"updating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":99,"character":5}}]}],"filterNaN":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"jhi-metrics-system","template":"\n        <h4>System</h4>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-4\">Uptime</div>\n            <div class=\"col-md-8 text-right\">{{ convertMillisecondsToDuration(systemMetrics['process.uptime']) }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-4\">Start time</div>\n            <div class=\"col-md-8 text-right\">{{ systemMetrics['process.start.time'] | date: 'full' }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">Process CPU usage</div>\n            <div class=\"col-md-3 text-right\">{{ 100 * systemMetrics['process.cpu.usage'] | number: '1.0-2' }} %</div>\n        </div>\n        <ngb-progressbar\n            [value]=\"100 * systemMetrics['process.cpu.usage']\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"success\"\n            *ngIf=\"!updating\"\n        >\n            <span>{{ 100 * systemMetrics['process.cpu.usage'] | number: '1.0-2' }} %</span>\n        </ngb-progressbar>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">System CPU usage</div>\n            <div class=\"col-md-3 text-right\">{{ 100 * systemMetrics['system.cpu.usage'] | number: '1.0-2' }} %</div>\n        </div>\n        <ngb-progressbar\n            [value]=\"100 * systemMetrics['system.cpu.usage']\"\n            [striped]=\"true\"\n            [animated]=\"false\"\n            type=\"success\"\n            *ngIf=\"!updating\"\n        >\n            <span>{{ 100 * systemMetrics['system.cpu.usage'] | number: '1.0-2' }} %</span>\n        </ngb-progressbar>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">System CPU count</div>\n            <div class=\"col-md-3 text-right\">{{ systemMetrics['system.cpu.count'] }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">System 1m Load average</div>\n            <div class=\"col-md-3 text-right\">{{ systemMetrics['system.load.average.1m'] | number: '1.0-2' }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">Process files max</div>\n            <div class=\"col-md-3 text-right\">{{ systemMetrics['process.files.max'] | number: '1.0-0' }}</div>\n        </div>\n        <div class=\"row\" *ngIf=\"!updating\">\n            <div class=\"col-md-9\">Process files open</div>\n            <div class=\"col-md-3 text-right\">{{ systemMetrics['process.files.open'] | number: '1.0-0' }}</div>\n        </div>\n    "}]}],"members":{"systemMetrics":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":80,"character":5}}]}],"updating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":85,"character":5}}]}],"convertMillisecondsToDuration":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"jhi-metrics-garbagecollector","template":"\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div *ngIf=\"garbageCollectorMetrics\">\n                    <span>\n                        GC Live Data Size/GC Max Data Size ({{\n                            garbageCollectorMetrics['jvm.gc.live.data.size'] / 1048576 | number: '1.0-0'\n                        }}M / {{ garbageCollectorMetrics['jvm.gc.max.data.size'] / 1048576 | number: '1.0-0' }}M)</span\n                    >\n                    <ngb-progressbar\n                        [max]=\"garbageCollectorMetrics['jvm.gc.max.data.size']\"\n                        [value]=\"garbageCollectorMetrics['jvm.gc.live.data.size']\"\n                        [striped]=\"true\"\n                        [animated]=\"false\"\n                        type=\"success\"\n                    >\n                        <span\n                            >{{\n                                (100 * garbageCollectorMetrics['jvm.gc.live.data.size']) / garbageCollectorMetrics['jvm.gc.max.data.size']\n                                    | number: '1.0-2'\n                            }}%</span\n                        >\n                    </ngb-progressbar>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div *ngIf=\"garbageCollectorMetrics\">\n                    <span>\n                        GC Memory Promoted/GC Memory Allocated ({{\n                            garbageCollectorMetrics['jvm.gc.memory.promoted'] / 1048576 | number: '1.0-0'\n                        }}M / {{ garbageCollectorMetrics['jvm.gc.memory.allocated'] / 1048576 | number: '1.0-0' }}M)</span\n                    >\n                    <ngb-progressbar\n                        [max]=\"garbageCollectorMetrics['jvm.gc.memory.allocated']\"\n                        [value]=\"garbageCollectorMetrics['jvm.gc.memory.promoted']\"\n                        [striped]=\"true\"\n                        [animated]=\"false\"\n                        type=\"success\"\n                    >\n                        <span\n                            >{{\n                                (100 * garbageCollectorMetrics['jvm.gc.memory.promoted']) /\n                                    garbageCollectorMetrics['jvm.gc.memory.allocated'] | number: '1.0-2'\n                            }}%</span\n                        >\n                    </ngb-progressbar>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"row\" *ngIf=\"garbageCollectorMetrics\">\n                    <div class=\"col-md-9\">Classes loaded</div>\n                    <div class=\"col-md-3 text-right\">{{ garbageCollectorMetrics.classesLoaded }}</div>\n                </div>\n                <div class=\"row\" *ngIf=\"garbageCollectorMetrics\">\n                    <div class=\"col-md-9\">Classes unloaded</div>\n                    <div class=\"col-md-3 text-right\">{{ garbageCollectorMetrics.classesUnloaded }}</div>\n                </div>\n            </div>\n            <div class=\"table-responsive\" *ngIf=\"!updating && garbageCollectorMetrics\">\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.count\">Count</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.mean\">Mean</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.min\">Min</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p50\">p50</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p75\">p75</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p95\">p95</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.p99\">p99</th>\n                            <th class=\"text-right\" jhiTranslate=\"metrics.servicesstats.table.max\">Max</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>jvm.gc.pause</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause'].count }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause'].mean | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.0'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.5'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.75'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.95'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause']['0.99'] | number: '1.0-3' }}</td>\n                            <td class=\"text-right\">{{ garbageCollectorMetrics['jvm.gc.pause'].max | number: '1.0-3' }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    "}]}],"members":{"garbageCollectorMetrics":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":117,"character":5}}]}],"updating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":122,"character":5}}]}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"jhi-thread-modal","template":"\n        <div class=\"modal-header\">\n            <h4 class=\"modal-title\" jhiTranslate=\"metrics.jvm.threads.dump.title\">Threads dump</h4>\n            <button type=\"button\" class=\"close\" (click)=\"activeModal.dismiss('closed')\">&times;</button>\n        </div>\n        <div class=\"modal-body\">\n            <span class=\"badge badge-primary\" (click)=\"threadDumpFilter = {}\">\n                All&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpAll }}</span> </span\n            >&nbsp;\n            <span class=\"badge badge-success\" (click)=\"threadDumpFilter = { threadState: 'RUNNABLE' }\">\n                Runnable&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpRunnable }}</span> </span\n            >&nbsp;\n            <span class=\"badge badge-info\" (click)=\"threadDumpFilter = { threadState: 'WAITING' }\"\n                >Waiting&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpWaiting }}</span></span\n            >&nbsp;\n            <span class=\"badge badge-warning\" (click)=\"threadDumpFilter = { threadState: 'TIMED_WAITING' }\">\n                Timed Waiting&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpTimedWaiting }}</span> </span\n            >&nbsp;\n            <span class=\"badge badge-danger\" (click)=\"threadDumpFilter = { threadState: 'BLOCKED' }\"\n                >Blocked&nbsp;<span class=\"badge badge-pill badge-default\">{{ threadDumpBlocked }}</span></span\n            >&nbsp;\n            <div class=\"mt-2\">&nbsp;</div>\n            Filter\n            <input type=\"text\" [(ngModel)]=\"threadDumpFilter\" class=\"form-control\" />\n            <div class=\"pad\" *ngFor=\"let entry of (threadDump | pureFilter: threadDumpFilter:'lockName' | keys)\">\n                <h6>\n                    <span class=\"badge\" [ngClass]=\"getBadgeClass(entry.value.threadState)\">{{ entry.value.threadState }}</span\n                    >&nbsp;{{ entry.value.threadName }}\n                    (ID\n                    {{ entry.value.threadId }})\n                    <a (click)=\"entry.show = !entry.show\" href=\"javascript:void(0);\">\n                        <span [hidden]=\"entry.show\" jhiTranslate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span>\n                        <span [hidden]=\"!entry.show\" jhiTranslate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span>\n                    </a>\n                </h6>\n                <div class=\"card\" [hidden]=\"!entry.show\">\n                    <div class=\"card-body\">\n                        <div *ngFor=\"let st of (entry.value.stackTrace | keys)\" class=\"break\">\n                            <samp\n                                >{{ st.value.className }}.{{ st.value.methodName }}(<code\n                                    >{{ st.value.fileName }}:{{ st.value.lineNumber }}</code\n                                >)</samp\n                            >\n                            <span class=\"mt-1\"></span>\n                        </div>\n                    </div>\n                </div>\n                <table class=\"table table-sm table-responsive\">\n                    <thead>\n                        <tr>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th>\n                            <th jhiTranslate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{{ entry.value.blockedTime }}</td>\n                            <td>{{ entry.value.blockedCount }}</td>\n                            <td>{{ entry.value.waitedTime }}</td>\n                            <td>{{ entry.value.waitedCount }}</td>\n                            <td class=\"thread-dump-modal-lock\" title=\"{{ entry.value.lockName }}\">\n                                <code>{{ entry.value.lockName }}</code>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary float-left\" data-dismiss=\"modal\" (click)=\"activeModal.dismiss('closed')\">\n                Done\n            </button>\n        </div>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbActiveModal","line":110,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"getBadgeClass":[{"__symbolic":"method"}]}}},"origins":{"JhiItemCountComponent":"./component/jhi-item-count.component","JhiBooleanComponent":"./component/jhi-boolean.component","JhiModuleConfig":"./config","JhiConfigService":"./config.service","JhiMaxbytesValidatorDirective":"./directive/maxbytes.directive","JhiMinbytesValidatorDirective":"./directive/minbytes.directive","JhiMaxValidatorDirective":"./directive/max.directive","JhiMinValidatorDirective":"./directive/min.directive","JhiSortDirective":"./directive/sort.directive","JhiSortByDirective":"./directive/sort-by.directive","JhiLanguageService":"./language/language.service","JhiTranslateDirective":"./language/jhi-translate.directive","JhiMissingTranslationHandler":"./language/jhi-missing-translation.config","missingTranslationHandler":"./ng-jhipster.module","NgJhipsterModule":"./ng-jhipster.module","translatePartialLoader":"./ng-jhipster.module","JhiTruncateCharactersPipe":"./pipe/truncate-characters.pipe","JhiTruncateWordsPipe":"./pipe/truncate-words.pipe","JhiOrderByPipe":"./pipe/order-by.pipe","JhiFilterPipe":"./pipe/filter.pipe","JhiPureFilterPipe":"./pipe/pure-filter.pipe","JhiCapitalizePipe":"./pipe/capitalize.pipe","JhiKeysPipe":"./pipe/keys.pipe","JhiPaginationUtil":"./service/pagination-util.service","JhiParseLinks":"./service/parse-links.service","JhiDataUtils":"./service/data-util.service","JhiDateUtils":"./service/date-util.service","JhiEventManager":"./service/event-manager.service","JhiAlertType":"./service/alert.service","JhiAlert":"./service/alert.service","JhiAlertService":"./service/alert.service","JhiBase64Service":"./service/base64.service","JhiResolvePagingParams":"./service/resolve-paging-params.service","ɵa":"./jhi-components","ɵb":"./jhi-components","ɵc":"./jhi-components","ɵd":"./component/metrics/jhi-jvm-memory.component","ɵe":"./component/metrics/jhi-jvm-threads.component","ɵf":"./component/metrics/jhi-metrics-request.component","ɵg":"./component/metrics/jhi-metrics-endpoints-requests","ɵh":"./component/metrics/jhi-metrics-cache.component","ɵi":"./component/metrics/jhi-metrics-datasource.component","ɵj":"./component/metrics/jhi-metrics-system.component","ɵk":"./component/metrics/jhi-metrics-garbagecollector.component","ɵl":"./component/metrics/jhi-metrics-modal-threads.component"},"importAs":"ng-jhipster"}