/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 Copyright 2013-2019 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
import { Component, Input } from '@angular/core';
var JhiMetricsCacheComponent = /** @class */ (function () {
    function JhiMetricsCacheComponent() {
    }
    /**
     * @param {?} input
     * @return {?}
     */
    JhiMetricsCacheComponent.prototype.filterNaN = /**
     * @param {?} input
     * @return {?}
     */
    function (input) {
        if (isNaN(input)) {
            return 0;
        }
        return input;
    };
    JhiMetricsCacheComponent.decorators = [
        { type: Component, args: [{
                    selector: 'jhi-metrics-cache',
                    template: "\n        <h3 jhiTranslate=\"metrics.cache.title\">Cache statistics</h3>\n        <div class=\"table-responsive\" *ngIf=\"!updating\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th jhiTranslate=\"metrics.cache.cachename\">Cache name</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.hits\">Cache Hits</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.misses\">Cache Misses</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.gets\">Cache Gets</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.puts\">Cache Puts</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.removals\">Cache Removals</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.evictions\">Cache Evictions</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.hitPercent\">Cache Hit %</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.missPercent\">Cache Miss %</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let entry of (cacheMetrics | keys)\">\n                        <td>{{ entry.key }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.hit'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.miss'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.puts'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.removals'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.evictions'] }}</td>\n                        <td class=\"text-right\">\n                            {{\n                                filterNaN(\n                                    (100 * entry.value['cache.gets.hit']) / (entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'])\n                                ) | number: '1.0-4'\n                            }}\n                        </td>\n                        <td class=\"text-right\">\n                            {{\n                                filterNaN(\n                                    (100 * entry.value['cache.gets.miss']) /\n                                        (entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'])\n                                ) | number: '1.0-4'\n                            }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    "
                }] }
    ];
    JhiMetricsCacheComponent.propDecorators = {
        cacheMetrics: [{ type: Input }],
        updating: [{ type: Input }]
    };
    return JhiMetricsCacheComponent;
}());
export { JhiMetricsCacheComponent };
if (false) {
    /**
     * object containing all cache related metrics
     * @type {?}
     */
    JhiMetricsCacheComponent.prototype.cacheMetrics;
    /**
     * boolean field saying if the metrics are in the process of being updated
     * @type {?}
     */
    JhiMetricsCacheComponent.prototype.updating;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamhpLW1ldHJpY3MtY2FjaGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctamhpcHN0ZXIvIiwic291cmNlcyI6WyJjb21wb25lbnQvbWV0cmljcy9qaGktbWV0cmljcy1jYWNoZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRDtJQUFBO0lBa0VBLENBQUM7Ozs7O0lBTkcsNENBQVM7Ozs7SUFBVCxVQUFVLEtBQUs7UUFDWCxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNkLE9BQU8sQ0FBQyxDQUFDO1NBQ1o7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOztnQkFqRUosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFFBQVEsRUFBRSxnMEZBNkNUO2lCQUNKOzs7K0JBS0ksS0FBSzsyQkFLTCxLQUFLOztJQVFWLCtCQUFDO0NBQUEsQUFsRUQsSUFrRUM7U0FqQlksd0JBQXdCOzs7Ozs7SUFJakMsZ0RBQTBCOzs7OztJQUsxQiw0Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuIENvcHlyaWdodCAyMDEzLTIwMTkgdGhlIG9yaWdpbmFsIGF1dGhvciBvciBhdXRob3JzIGZyb20gdGhlIEpIaXBzdGVyIHByb2plY3QuXG5cbiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgSkhpcHN0ZXIgcHJvamVjdCwgc2VlIGh0dHBzOi8vd3d3LmpoaXBzdGVyLnRlY2gvXG4gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG5cbiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG4gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdqaGktbWV0cmljcy1jYWNoZScsXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGgzIGpoaVRyYW5zbGF0ZT1cIm1ldHJpY3MuY2FjaGUudGl0bGVcIj5DYWNoZSBzdGF0aXN0aWNzPC9oMz5cbiAgICAgICAgPGRpdiBjbGFzcz1cInRhYmxlLXJlc3BvbnNpdmVcIiAqbmdJZj1cIiF1cGRhdGluZ1wiPlxuICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidGFibGUgdGFibGUtc3RyaXBlZFwiPlxuICAgICAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGpoaVRyYW5zbGF0ZT1cIm1ldHJpY3MuY2FjaGUuY2FjaGVuYW1lXCI+Q2FjaGUgbmFtZTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJ0ZXh0LXJpZ2h0XCIgZGF0YS10cmFuc2xhdGU9XCJtZXRyaWNzLmNhY2hlLmhpdHNcIj5DYWNoZSBIaXRzPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz1cInRleHQtcmlnaHRcIiBkYXRhLXRyYW5zbGF0ZT1cIm1ldHJpY3MuY2FjaGUubWlzc2VzXCI+Q2FjaGUgTWlzc2VzPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz1cInRleHQtcmlnaHRcIiBkYXRhLXRyYW5zbGF0ZT1cIm1ldHJpY3MuY2FjaGUuZ2V0c1wiPkNhY2hlIEdldHM8L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwidGV4dC1yaWdodFwiIGRhdGEtdHJhbnNsYXRlPVwibWV0cmljcy5jYWNoZS5wdXRzXCI+Q2FjaGUgUHV0czwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJ0ZXh0LXJpZ2h0XCIgZGF0YS10cmFuc2xhdGU9XCJtZXRyaWNzLmNhY2hlLnJlbW92YWxzXCI+Q2FjaGUgUmVtb3ZhbHM8L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwidGV4dC1yaWdodFwiIGRhdGEtdHJhbnNsYXRlPVwibWV0cmljcy5jYWNoZS5ldmljdGlvbnNcIj5DYWNoZSBFdmljdGlvbnM8L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwidGV4dC1yaWdodFwiIGRhdGEtdHJhbnNsYXRlPVwibWV0cmljcy5jYWNoZS5oaXRQZXJjZW50XCI+Q2FjaGUgSGl0ICU8L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwidGV4dC1yaWdodFwiIGRhdGEtdHJhbnNsYXRlPVwibWV0cmljcy5jYWNoZS5taXNzUGVyY2VudFwiPkNhY2hlIE1pc3MgJTwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgIDx0ciAqbmdGb3I9XCJsZXQgZW50cnkgb2YgKGNhY2hlTWV0cmljcyB8IGtleXMpXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZW50cnkua2V5IH19PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRleHQtcmlnaHRcIj57eyBlbnRyeS52YWx1ZVsnY2FjaGUuZ2V0cy5oaXQnXSB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZXh0LXJpZ2h0XCI+e3sgZW50cnkudmFsdWVbJ2NhY2hlLmdldHMubWlzcyddIH19PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRleHQtcmlnaHRcIj57eyBlbnRyeS52YWx1ZVsnY2FjaGUuZ2V0cy5oaXQnXSArIGVudHJ5LnZhbHVlWydjYWNoZS5nZXRzLm1pc3MnXSB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZXh0LXJpZ2h0XCI+e3sgZW50cnkudmFsdWVbJ2NhY2hlLnB1dHMnXSB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZXh0LXJpZ2h0XCI+e3sgZW50cnkudmFsdWVbJ2NhY2hlLnJlbW92YWxzJ10gfX08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGV4dC1yaWdodFwiPnt7IGVudHJ5LnZhbHVlWydjYWNoZS5ldmljdGlvbnMnXSB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZXh0LXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyTmFOKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKDEwMCAqIGVudHJ5LnZhbHVlWydjYWNoZS5nZXRzLmhpdCddKSAvIChlbnRyeS52YWx1ZVsnY2FjaGUuZ2V0cy5oaXQnXSArIGVudHJ5LnZhbHVlWydjYWNoZS5nZXRzLm1pc3MnXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB8IG51bWJlcjogJzEuMC00J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGV4dC1yaWdodFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlck5hTihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICgxMDAgKiBlbnRyeS52YWx1ZVsnY2FjaGUuZ2V0cy5taXNzJ10pIC9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZW50cnkudmFsdWVbJ2NhY2hlLmdldHMuaGl0J10gKyBlbnRyeS52YWx1ZVsnY2FjaGUuZ2V0cy5taXNzJ10pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgfCBudW1iZXI6ICcxLjAtNCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgYFxufSlcbmV4cG9ydCBjbGFzcyBKaGlNZXRyaWNzQ2FjaGVDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIG9iamVjdCBjb250YWluaW5nIGFsbCBjYWNoZSByZWxhdGVkIG1ldHJpY3NcbiAgICAgKi9cbiAgICBASW5wdXQoKSBjYWNoZU1ldHJpY3M6IHt9O1xuXG4gICAgLyoqXG4gICAgICogYm9vbGVhbiBmaWVsZCBzYXlpbmcgaWYgdGhlIG1ldHJpY3MgYXJlIGluIHRoZSBwcm9jZXNzIG9mIGJlaW5nIHVwZGF0ZWRcbiAgICAgKi9cbiAgICBASW5wdXQoKSB1cGRhdGluZzogYm9vbGVhbjtcblxuICAgIGZpbHRlck5hTihpbnB1dCkge1xuICAgICAgICBpZiAoaXNOYU4oaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgfVxufVxuIl19