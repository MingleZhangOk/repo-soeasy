/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 Copyright 2013-2019 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
import { ContentChild, Directive, Host, HostListener, Input } from '@angular/core';
import { FaIconComponent } from '@fortawesome/angular-fontawesome';
import { JhiConfigService } from '../config.service';
import { JhiSortDirective } from './sort.directive';
export class JhiSortByDirective {
    /**
     * @param {?} jhiSort
     * @param {?} configService
     */
    constructor(jhiSort, configService) {
        this.jhiSort = jhiSort;
        this.jhiSort = jhiSort;
        /** @type {?} */
        const config = configService.getConfig();
        this.sortIcon = config.sortIcon;
        this.sortAscIcon = config.sortAscIcon;
        this.sortDescIcon = config.sortDescIcon;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        if (this.jhiSort.predicate && this.jhiSort.predicate !== '_score' && this.jhiSort.predicate === this.jhiSortBy) {
            this.updateIconDefinition(this.iconComponent, this.jhiSort.ascending ? this.sortDescIcon : this.sortAscIcon);
            this.jhiSort.activeIconComponent = this.iconComponent;
        }
    }
    /**
     * @return {?}
     */
    onClick() {
        if (this.jhiSort.predicate && this.jhiSort.predicate !== '_score') {
            this.jhiSort.sort(this.jhiSortBy);
            this.updateIconDefinition(this.jhiSort.activeIconComponent, this.sortIcon);
            this.updateIconDefinition(this.iconComponent, this.jhiSort.ascending ? this.sortDescIcon : this.sortAscIcon);
            this.jhiSort.activeIconComponent = this.iconComponent;
        }
    }
    /**
     * @private
     * @param {?} iconComponent
     * @param {?} icon
     * @return {?}
     */
    updateIconDefinition(iconComponent, icon) {
        if (iconComponent) {
            iconComponent.iconProp = icon;
            iconComponent.ngOnChanges({});
        }
    }
}
JhiSortByDirective.decorators = [
    { type: Directive, args: [{
                selector: '[jhiSortBy]'
            },] }
];
/** @nocollapse */
JhiSortByDirective.ctorParameters = () => [
    { type: JhiSortDirective, decorators: [{ type: Host }] },
    { type: JhiConfigService }
];
JhiSortByDirective.propDecorators = {
    jhiSortBy: [{ type: Input }],
    iconComponent: [{ type: ContentChild, args: [FaIconComponent,] }],
    onClick: [{ type: HostListener, args: ['click',] }]
};
if (false) {
    /** @type {?} */
    JhiSortByDirective.prototype.jhiSortBy;
    /** @type {?} */
    JhiSortByDirective.prototype.iconComponent;
    /** @type {?} */
    JhiSortByDirective.prototype.sortIcon;
    /** @type {?} */
    JhiSortByDirective.prototype.sortAscIcon;
    /** @type {?} */
    JhiSortByDirective.prototype.sortDescIcon;
    /**
     * @type {?}
     * @private
     */
    JhiSortByDirective.prototype.jhiSort;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC1ieS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1qaGlwc3Rlci8iLCJzb3VyY2VzIjpbImRpcmVjdGl2ZS9zb3J0LWJ5LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBLE9BQU8sRUFBb0IsWUFBWSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFHbkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFLcEQsTUFBTSxPQUFPLGtCQUFrQjs7Ozs7SUFRM0IsWUFBNEIsT0FBeUIsRUFBRSxhQUErQjtRQUExRCxZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUNqRCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQzs7Y0FDakIsTUFBTSxHQUFHLGFBQWEsQ0FBQyxTQUFTLEVBQUU7UUFDeEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQztRQUN0QyxJQUFJLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUM7SUFDNUMsQ0FBQzs7OztJQUVELGtCQUFrQjtRQUNkLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEtBQUssUUFBUSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxLQUFLLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDNUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUM3RyxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7U0FDekQ7SUFDTCxDQUFDOzs7O0lBR0QsT0FBTztRQUNILElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEtBQUssUUFBUSxFQUFFO1lBQy9ELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDM0UsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUM3RyxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7U0FDekQ7SUFDTCxDQUFDOzs7Ozs7O0lBRU8sb0JBQW9CLENBQUMsYUFBOEIsRUFBRSxJQUFvQjtRQUM3RSxJQUFJLGFBQWEsRUFBRTtZQUNmLGFBQWEsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBQzlCLGFBQWEsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDakM7SUFDTCxDQUFDOzs7WUF6Q0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxhQUFhO2FBQzFCOzs7O1lBSlEsZ0JBQWdCLHVCQWFSLElBQUk7WUFkWixnQkFBZ0I7Ozt3QkFPcEIsS0FBSzs0QkFDTCxZQUFZLFNBQUMsZUFBZTtzQkFxQjVCLFlBQVksU0FBQyxPQUFPOzs7O0lBdEJyQix1Q0FBMkI7O0lBQzNCLDJDQUE4RDs7SUFFOUQsc0NBQXlCOztJQUN6Qix5Q0FBNEI7O0lBQzVCLDBDQUE2Qjs7Ozs7SUFFakIscUNBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiBDb3B5cmlnaHQgMjAxMy0yMDE5IHRoZSBvcmlnaW5hbCBhdXRob3Igb3IgYXV0aG9ycyBmcm9tIHRoZSBKSGlwc3RlciBwcm9qZWN0LlxuXG4gVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEpIaXBzdGVyIHByb2plY3QsIHNlZSBodHRwczovL3d3dy5qaGlwc3Rlci50ZWNoL1xuIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuXG4gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBDb250ZW50Q2hpbGQsIERpcmVjdGl2ZSwgSG9zdCwgSG9zdExpc3RlbmVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmFJY29uQ29tcG9uZW50IH0gZnJvbSAnQGZvcnRhd2Vzb21lL2FuZ3VsYXItZm9udGF3ZXNvbWUnO1xuaW1wb3J0IHsgSWNvbkRlZmluaXRpb24gfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMnO1xuXG5pbXBvcnQgeyBKaGlDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IHsgSmhpU29ydERpcmVjdGl2ZSB9IGZyb20gJy4vc29ydC5kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tqaGlTb3J0QnldJ1xufSlcbmV4cG9ydCBjbGFzcyBKaGlTb3J0QnlEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgICBASW5wdXQoKSBqaGlTb3J0Qnk6IHN0cmluZztcbiAgICBAQ29udGVudENoaWxkKEZhSWNvbkNvbXBvbmVudCkgaWNvbkNvbXBvbmVudDogRmFJY29uQ29tcG9uZW50O1xuXG4gICAgc29ydEljb246IEljb25EZWZpbml0aW9uO1xuICAgIHNvcnRBc2NJY29uOiBJY29uRGVmaW5pdGlvbjtcbiAgICBzb3J0RGVzY0ljb246IEljb25EZWZpbml0aW9uO1xuXG4gICAgY29uc3RydWN0b3IoQEhvc3QoKSBwcml2YXRlIGpoaVNvcnQ6IEpoaVNvcnREaXJlY3RpdmUsIGNvbmZpZ1NlcnZpY2U6IEpoaUNvbmZpZ1NlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5qaGlTb3J0ID0gamhpU29ydDtcbiAgICAgICAgY29uc3QgY29uZmlnID0gY29uZmlnU2VydmljZS5nZXRDb25maWcoKTtcbiAgICAgICAgdGhpcy5zb3J0SWNvbiA9IGNvbmZpZy5zb3J0SWNvbjtcbiAgICAgICAgdGhpcy5zb3J0QXNjSWNvbiA9IGNvbmZpZy5zb3J0QXNjSWNvbjtcbiAgICAgICAgdGhpcy5zb3J0RGVzY0ljb24gPSBjb25maWcuc29ydERlc2NJY29uO1xuICAgIH1cblxuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuamhpU29ydC5wcmVkaWNhdGUgJiYgdGhpcy5qaGlTb3J0LnByZWRpY2F0ZSAhPT0gJ19zY29yZScgJiYgdGhpcy5qaGlTb3J0LnByZWRpY2F0ZSA9PT0gdGhpcy5qaGlTb3J0QnkpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlSWNvbkRlZmluaXRpb24odGhpcy5pY29uQ29tcG9uZW50LCB0aGlzLmpoaVNvcnQuYXNjZW5kaW5nID8gdGhpcy5zb3J0RGVzY0ljb24gOiB0aGlzLnNvcnRBc2NJY29uKTtcbiAgICAgICAgICAgIHRoaXMuamhpU29ydC5hY3RpdmVJY29uQ29tcG9uZW50ID0gdGhpcy5pY29uQ29tcG9uZW50O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICAgIG9uQ2xpY2soKSB7XG4gICAgICAgIGlmICh0aGlzLmpoaVNvcnQucHJlZGljYXRlICYmIHRoaXMuamhpU29ydC5wcmVkaWNhdGUgIT09ICdfc2NvcmUnKSB7XG4gICAgICAgICAgICB0aGlzLmpoaVNvcnQuc29ydCh0aGlzLmpoaVNvcnRCeSk7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUljb25EZWZpbml0aW9uKHRoaXMuamhpU29ydC5hY3RpdmVJY29uQ29tcG9uZW50LCB0aGlzLnNvcnRJY29uKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlSWNvbkRlZmluaXRpb24odGhpcy5pY29uQ29tcG9uZW50LCB0aGlzLmpoaVNvcnQuYXNjZW5kaW5nID8gdGhpcy5zb3J0RGVzY0ljb24gOiB0aGlzLnNvcnRBc2NJY29uKTtcbiAgICAgICAgICAgIHRoaXMuamhpU29ydC5hY3RpdmVJY29uQ29tcG9uZW50ID0gdGhpcy5pY29uQ29tcG9uZW50O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB1cGRhdGVJY29uRGVmaW5pdGlvbihpY29uQ29tcG9uZW50OiBGYUljb25Db21wb25lbnQsIGljb246IEljb25EZWZpbml0aW9uKSB7XG4gICAgICAgIGlmIChpY29uQ29tcG9uZW50KSB7XG4gICAgICAgICAgICBpY29uQ29tcG9uZW50Lmljb25Qcm9wID0gaWNvbjtcbiAgICAgICAgICAgIGljb25Db21wb25lbnQubmdPbkNoYW5nZXMoe30pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19